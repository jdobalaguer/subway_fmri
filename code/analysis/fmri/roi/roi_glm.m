
function scan = roi_glm()
    %% WARNINGS
    %#ok<*NUSED,*ALIGN,*INUSD,*NBRAK>
    
    %% SCANNER
    scan = parameters();
    
    %% SET SUBJECTS
    scan.subject.r      = [6,10];
    
    %% GLM SETTINGS
    scan.glm.copy       = true(1,6);
    scan.glm.delay      = 0;
    scan.glm.function   = 'hrf';
    scan.glm.hrf.ord    = [0,0];
    scan.glm.image      = 'smooth4';
    scan.glm.marge      = 5;
    scan.glm.name       = 'final_GLM';
    scan.glm.pooling    = true;
    scan.glm.redo       = 3;
    
    scan.glm.contrasts.generic = true;
    scan.glm.contrasts.extra   = struct('name',{...
                                            'X'             ... main effects
                                            'S'             ...
                                            'XS'            ...
                                            'C>LIR'         ...
                                            'Dgoal'         ... Dgoal
                                            'X(Dgoal)'      ...
                                            'S(Dgoal)'      ...
                                            'XS(Dgoal)'     ...
                                            'C>LIR(Dgoal)'  ...
                                            'Dline'         ... Dline
                                            'X(Dline)'      ...
                                            'S(Dline)'      ...
                                            'XS(Dline)'     ...
                                            'C>LIR(Dline)'  ...
                                        },'regressor',{...
                                            ... main effects
                                            {'C',       'L',       'I',       'R'       }... X
                                            {'C',       'L',       'I',       'R'       }... S
                                            {'C',       'L',       'I',       'R'       }... XS
                                            {'C',       'L',       'I',       'R'       }... C>LIR
                                            ... Dgoal
                                            {'C(Dgoal)','L(Dgoal)','I(Dgoal)','R(Dgoal)'}... Dgoal
                                            {'C(Dgoal)','L(Dgoal)','I(Dgoal)','R(Dgoal)'}... X(Dgoal)
                                            {'C(Dgoal)','L(Dgoal)','I(Dgoal)','R(Dgoal)'}... S(Dgoal)
                                            {'C(Dgoal)','L(Dgoal)','I(Dgoal)','R(Dgoal)'}... XS(Dgoal)
                                            {'C(Dgoal)','L(Dgoal)','I(Dgoal)','R(Dgoal)'}... C>LIR(Dgoal)
                                            ... Dline
                                            {'C(Dline)','L(Dline)','I(Dline)','R(Dline)'}... Dline
                                            {'C(Dline)','L(Dline)','I(Dline)','R(Dline)'}... X(Dline)
                                            {'C(Dline)','L(Dline)','I(Dline)','R(Dline)'}... S(Dline)
                                            {'C(Dline)','L(Dline)','I(Dline)','R(Dline)'}... XS(Dline)
                                            {'C(Dline)','L(Dline)','I(Dline)','R(Dline)'}... C>LIR(Dline)
                                        },'weight',{...
                                            ... main effects
                                            [+1,-1,+1,-1]... X
                                            [+1,+1,-1,-1]... S
                                            [+1,-1,-1,+1]... XS
                                            [+3,-1,-1,-1]... C>LIR
                                            ... Dgoal
                                            [+1,+1,+1,+1]... Dgoal
                                            [+1,-1,+1,-1]... X(Dgoal)
                                            [+1,+1,-1,-1]... S(Dgoal)
                                            [+1,-1,-1,+1]... XS(Dgoal)
                                            [+3,-1,-1,-1]... C>LIR(Dgoal)
                                            ... Dline
                                            [+1,+1,+1,+1]... Dline
                                            [+1,-1,+1,-1]... X(Dline)
                                            [+1,+1,-1,-1]... S(Dline)
                                            [+1,-1,-1,+1]... XS(Dline)
                                            [+3,-1,-1,-1]... C>LIR(Dline)
                                        });
    scan.glm.plot.contrast  = {'C_','L_','I_','R_'};
    scan.glm.plot.mask      = 'new/.img';
    scan.glm.plot.extension = 'img';
    
    %% LOAD DATA
    data  = load_data_ext( 'scanner');
    block = load_block_ext('scanner');
    
    %% INDEXES
    ii_N      = (~data.resp_bool | data.resp_away_any);
    ii_C      = (~ii_N &  data.vbxi_exchange_in &  data.resp_direction_switch);
    ii_L      = (~ii_N & ~data.vbxi_exchange_in &  data.resp_direction_switch);
    ii_I      = (~ii_N &  data.vbxi_exchange_in & ~data.resp_direction_switch);
    ii_R      = (~ii_N & ~data.vbxi_exchange_in & ~data.resp_direction_switch);
    
    jj_block        = get_rows(block.expt_subject);
    jj_data         = get_rows(data.expt_subject,ii_N,ii_R,ii_C,ii_L,ii_I,ii_R);
    
    %% GLM REGRESSORS
    z_block_easy    = get_zscore(block.vbxi_easy,             jj_block);
    z_block_corr    = get_zscore(block.resp_correct_all,      jj_block);
    
    z_data_goal     = get_zscore(data.optm_dist_station_goal, jj_data);
    z_data_line     = get_zscore(data.optm_dist_subline_goal, jj_data);
    
    % regressors
    scan.glm.regressor = struct(                        ...
          'subject', {                                    ... subject
                     block.expt_subject ,               ...
                     data.expt_subject(ii_N),           ...
                     data.expt_subject(ii_C),           ...
                     data.expt_subject(ii_L),           ...
                     data.expt_subject(ii_I),           ...
                     data.expt_subject(ii_R),           ...
                     block.expt_subject,                ...
        },'session', {                                  ... session
                     block.expt_session ,               ...
                     data.expt_session(ii_N),           ...
                     data.expt_session(ii_C),           ...
                     data.expt_session(ii_L),           ...
                     data.expt_session(ii_I),           ...
                     data.expt_session(ii_R),           ...
                     block.expt_session ,               ...
        },'onset',   {                                  ... onset
                     block.vbxi_onset_cue ,             ...
                     data.vbxi_onset(ii_N),             ...
                     data.vbxi_onset(ii_C),             ...
                     data.vbxi_onset(ii_L),             ...
                     data.vbxi_onset(ii_I),             ...
                     data.vbxi_onset(ii_R),             ...
                     block.vbxi_onset_reward,          ...
        },'discard', {                                  ... discard
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     isnan(block.vbxi_onset_reward),    ... %(participant 1 didn't get a feedback in the last block)
        },'name',    {                                  ... name
                     'Cue' ,                            ...
                     'N' ,                              ...
                     'C' ,                              ...
                     'L' ,                              ...
                     'I' ,                              ...
                     'R' ,                              ...
                     'Feed',                            ...
        },'subname', {                                  ... subname
                     {                                  ...   Cue
                        'Cue(Deasy)',...
                        'Cue(Dcorr)',...
                     }, {                               ...   N
                     }, {                               ...   C
                        'C(Dgoal)',...
                        'C(Dline)',...
                     }, {                               ...   L
                        'L(Dgoal)',...
                        'L(Dline)',...
                     }, {                               ...   I
                        'I(Dgoal)',...
                        'I(Dline)',...
                     }, {                               ...   R
                        'R(Dgoal)',...
                        'R(Dline)',...
                     }, {                               ...   Feed
                     },                                 ...
        },'level',   {                                  ... level
                     {                                  ...     cues
                        z_block_easy,...
                        z_block_corr,...
                     }, {                               ...     N
                     }, {                               ...     C
                        z_data_goal(ii_C),...
                        z_data_line(ii_C),...
                     }, {                               ...     L
                        z_data_goal(ii_L),...
                        z_data_line(ii_L),...
                     }, {                               ...     I
                        z_data_goal(ii_I),...
                        z_data_line(ii_I),...
                     }, {                               ...     R
                        z_data_goal(ii_R),...
                        z_data_line(ii_R),...
                     }, {                               ...     feed
                     },                                 ...
        },'duration',{                                    ... duration
                     0,                                 ...     cues
                     0,                                 ...     N
                     0,                                 ...     C
                     0,                                 ...     L
                     0,                                 ...     I
                     0,                                 ...     R
                     0,                                 ...     feed
                     });
                                     
    %% SANITY CHECK
    scan = scan_initialize(scan);
    
    %% COPY SCRIPT
    file_script = mfilename('fullpath');
    if ~isempty(file_script)
        mkdirp(scan.dire.glm.root);
        copyfile(sprintf('%s.m',file_script),sprintf('%sglm_run.m',scan.dire.glm.root));
    end
    
    %% RUN
    scan_glm_run(scan);
end
