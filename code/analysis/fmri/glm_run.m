
function scan = glm_run()
    %% WARNINGS
    %#ok<*NUSED,*ALIGN,*INUSD,*NBRAK>
    
    %% SCANNER
    scan = parameters();
    
    %% SET SUBJECTS
    scan.subject.r      = [6,10];
%     scan.subject.u      = [1:5];
    
    %% GLM SETTINGS
    scan.glm.copy       = true(1,6);
    scan.glm.delay      = 0;
    scan.glm.function   = 'hrf';
    scan.glm.hrf.ord    = [0,0];
%     scan.glm.fir.ord    = 8;
%     scan.glm.fir.len    = 14;
    scan.glm.image      = 'smooth4';
    scan.glm.marge      = 5;
    scan.glm.name       = 'GLMM_fir14-0&8_Cues_N_C_L_I_R(X+S+Tgoal+Dgoal)_Feed';
    scan.glm.pooling    = true;
    scan.glm.redo       = 1;
    
    scan.glm.contrasts.generic = false;
    scan.glm.contrasts.extra   = struct('name',{...
                                            'R(Tgoal)',...
                                            'R(Dgoal)',...
                                        },'regressor',{...
                                            {'R(Tgoal)'},...
                                            {'R(Dgoal)'},...
                                        },'weight',{...
                                            [1],...
                                            [1],...
                                        });
    scan.glm.plot.contrast  = '';
    scan.glm.plot.mask      = '';
    scan.glm.plot.extension = 'img';
    
    %% LOAD DATA
    data  = load_data_ext( 'scanner');
    block = load_block_ext('scanner');
    
    %% INDEXES
    ii_N      = (~data.resp_bool);
    ii_C      = ( data.resp_bool & data.vbxi_exchange_in &  data.resp_direction_switch);
    ii_L      = ( data.resp_bool & ~data.vbxi_exchange_in &  data.resp_direction_switch);
    ii_I      = ( data.resp_bool & data.vbxi_exchange_in & ~data.resp_direction_switch);
    ii_R      = ( data.resp_bool & ~data.vbxi_exchange_in & ~data.resp_direction_switch);
    
    %% GLM REGRESSORS
    
    r_data_Dgoal    = data.optm_dist_station_goal;
    r_data_Tgoal    = data.expt_trial;

    
    % regressors
    scan.glm.regressor = struct(                        ...
        'subject', {                                    ... subject
                     block.expt_subject ,               ...
                     data.expt_subject(ii_N),           ...
                     data.expt_subject(ii_C),           ...
                     data.expt_subject(ii_L),           ...
                     data.expt_subject(ii_I),           ...
                     data.expt_subject(ii_R),           ...
                     block.expt_subject },              ...
        'session', {                                    ... session
                     block.expt_session ,               ...
                     data.expt_session(ii_N),           ...
                     data.expt_session(ii_C),           ...
                     data.expt_session(ii_L),           ...
                     data.expt_session(ii_I),           ...
                     data.expt_session(ii_R),           ...
                     block.expt_session },              ...
        'onset',   {                                    ... onset
                     block.vbxi_onset_cue ,             ...
                     data.vbxi_onset(ii_N),             ...
                     data.vbxi_onset(ii_C),             ...
                     data.vbxi_onset(ii_L),             ...
                     data.vbxi_onset(ii_I),             ...
                     data.vbxi_onset(ii_R),             ...
                     block.vbxi_onset_reward },         ...
        'discard', {                                    ... discard
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     isnan(block.vbxi_onset_reward) },  ... %(participant 1 didn't get a feedback in the last block)
        'name',    {                                    ... name
                     'Cue' ,                            ...
                     'N' ,                              ...
                     'C' ,                              ...
                     'L' ,                              ...
                     'I' ,                              ...
                     'R' ,                              ...
                     'Feed' },                          ...
        'subname', {                                    ... subname
                     {                                  ...   Cue
                     },                                 ...
                     {                                  ...   N
                     },                                 ...
                     {                                  ...   C
                     },                                 ...
                     {                                  ...   L
                     },                                 ...
                     {                                  ...   I
                     },                                 ...
                     {                                  ...   R
                       'R(Tgoal)',                      ...
                       'R(Dgoal)',                      ...
                     },                                 ...
                     {                                  ...   Feed
                     } },                               ...
        'level',   {                                    ... level
                     {                                  ...     cues
                     }, {                               ...     N
                     }, {                               ...     C
                     }, {                               ...     L
                     }, {                               ...     I
                     }, {                               ...     R
                        r_data_Tgoal(ii_R),             ...
                        r_data_Dgoal(ii_R),             ...

                     }, {                               ...     feed
                     } },                               ...
        'duration',{                                    ... duration
                     0,                                 ...     cues
                     0,                                 ...     N
                     0,                                 ...     C
                     0,                                 ...     L
                     0,                                 ...     I
                     0,                                 ...     R
                     0,                                 ...     feed
                     });
                                     
    %% SANITY CHECK
    scan = scan_initialize(scan);
    
    %% COPY SCRIPT
    file_script = mfilename('fullpath');
    if ~isempty(file_script)
        mkdirp(scan.dire.glm.root);
        copyfile(sprintf('%s.m',file_script),sprintf('%sglm_run.m',scan.dire.glm.root));
    end
    
    %% RUN
    scan_glm_run(scan);
end
