
function scan = glm()
    %% WARNINGS
    %#ok<*NUSED,*ALIGN,*INUSD>
    
    %% SCANNER
    scan = parameters();
    
    %% SET SUBJECTS
    scan.subject.r      = [6,10];
    
    %% GLM SETTINGS
    scan.glm.copy       = true(1,6);
    scan.glm.delay      = 0;
%     scan.glm.function   = 'fir';
    scan.glm.function   = 'hrf';
%     scan.glm.fir.ord    = 8;
%     scan.glm.fir.len    = 14;
    scan.glm.hrf.ord    = [0,0];
    scan.glm.image      = 'smooth4';
    scan.glm.marge      = 5;
%     scan.glm.name       = 'GLMM_fir14-0&8_Cues_Fill_Easy_First_respE_respN_respS_respW_Feed';
    scan.glm.name       = 'GLMM_hrf0_Cues_Fill_Easy_First_respE_respN_respS_respW_Feed';
    scan.glm.pooling    = false;
    scan.glm.redo       = 1; %[1-5] = do from the {regressors,first regression, first contrast, second contrast, dont}
    
    scan.glm.contrasts.generic = false;
    scan.glm.contrasts.extra(1) = struct('name',{'respWE'},'regressor',{{'respE','respN','respS','respW'}},'weight',{[+1,-1,-1,+1]});
    scan.glm.contrasts.extra(2) = struct('name',{'respNE'},'regressor',{{'respE','respN','respS','respW'}},'weight',{[+1,+1,-1,-1]});
    scan.glm.contrasts.extra(3) = struct('name',{'respSE'},'regressor',{{'respE','respN','respS','respW'}},'weight',{[+1,-1,+1,-1]});
    
    scan.glm.plot.contrast  = '';
    scan.glm.plot.mask      = '';
    scan.glm.plot.extension = 'normalisation';
    
    %% GLM REGRESSORS
    data  = load_data_ext( 'scanner');
    block = load_block_ext('scanner');
    % temporary indexes
    ii_back  = logical(data.resp_direction_back_any);
    ii_null  = (~data.resp_bool);
    ii_away  = (~ii_back & ~ii_null & data.resp_away_any);
    ii_fill  = ( ii_back |  ii_null |  ii_away);
    ii_forw  = (~ii_back & ~ii_null & ~ii_away);
    ii_easy  = (ii_forw & (data.vbxi_subline_start == data.vbxi_subline_goal));
    ii_hard  = (ii_forw & (data.vbxi_subline_start ~= data.vbxi_subline_goal));
    ii_first = (ii_hard &  data.expt_first );
    ii_then  = (ii_hard & ~data.expt_first );
    ii_respE = (ii_then &  data.resp_direction_east);
    ii_respN = (ii_then &  data.resp_direction_north);
    ii_respS = (ii_then &  data.resp_direction_south);
    ii_respW = (ii_then &  data.resp_direction_west);
    % regressors
    scan.glm.regressor = struct(                        ...
        'subject', {                                    ... subject
                     block.expt_subject ,               ...
                     data.expt_subject(ii_fill),        ...
                     data.expt_subject(ii_easy),        ...
                     data.expt_subject(ii_first),       ...
                     data.expt_subject(ii_respE),       ...
                     data.expt_subject(ii_respN),       ...
                     data.expt_subject(ii_respS),       ...
                     data.expt_subject(ii_respW),       ...
                     block.expt_subject },              ...
        'session', {                                    ... session
                     block.expt_session ,               ...
                     data.expt_session(ii_fill),        ...
                     data.expt_session(ii_easy),        ...
                     data.expt_session(ii_first),       ...
                     data.expt_session(ii_respE),       ...
                     data.expt_session(ii_respN),       ...
                     data.expt_session(ii_respS),       ...
                     data.expt_session(ii_respW),       ...
                     block.expt_session },              ...
        'onset',   {                                    ... onset
                     block.vbxi_onset_cue ,             ...
                     data.vbxi_onset(ii_fill),          ...
                     data.vbxi_onset(ii_easy),          ...
                     data.vbxi_onset(ii_first),         ...
                     data.vbxi_onset(ii_respE),         ...
                     data.vbxi_onset(ii_respN),         ...
                     data.vbxi_onset(ii_respS),         ...
                     data.vbxi_onset(ii_respW),         ...
                     block.vbxi_onset_reward },         ...
        'discard', {                                    ... discard
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     isnan(block.vbxi_onset_reward) },  ... %(participant 1 didn't get a feedback in the last block)
        'name',    {                                    ... name
                     'Cue' ,                            ...
                     'Fill' ,                           ...
                     'Easy' ,                           ...
                     'First' ,                          ...
                     'respE' ,                          ...
                     'respN' ,                          ...
                     'respS' ,                          ...
                     'respW' ,                          ...
                     'Feed' },                          ...
        'subname', {                                    ... subname
                     {},                                ...
                     {} ,                               ...
                     {} ,                               ...
                     {} ,                               ...
                     {},                                ...
                     {},                                ...
                     {},                                ...
                     {},                                ...
                     {} },                              ...
        'level',   {                                    ... level
                     {                                  ...     cues
                     }, {                               ...     fill
                     }, {                               ...     easy
                     }, {                               ...     first
                     }, {                               ...     respE
                     }, {                               ...     respN
                     }, {                               ...     respS
                     }, {                               ...     respW
                     }, {                               ...     feed
                     } },                               ...
        'duration',{                                    ... duration
                     0,                                 ...     cues
                     0,                                 ...     fill
                     0,                                 ...     easy
                     0,                                 ...     first
                     0,                                 ...     respE
                     0,                                 ...     respN
                     0,                                 ...     respS
                     0,                                 ...     respW
                     0,                                 ...     feed
                     });
                                     
    %% SANITY CHECK
    scan = scan_initialize(scan);
     
    %% RUN
    scan_glm_run(scan);
end
