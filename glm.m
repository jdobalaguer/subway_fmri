
function scan = glm()
    %% WARNINGS
    %#ok<*NUSED,*ALIGN,*INUSD>
    
    %% CLEAN
    clear all;
    
    %% SET SUBJECTS
    scan.subject.r      = [6,10];
    
    %% GLM SETTINGS
    scan.glm.delay      = 0;
    scan.glm.delete     = 1;
    scan.glm.fir.ord    = 8;
    scan.glm.fir.len    = 16;
    scan.glm.function   = 'fir';
    scan.glm.image      = 'smooth';
    scan.glm.marge      = 5;
    scan.glm.name       = 'GLMM_fir16-0&8_Cues_Fill_Easy_Hard(X+S+XS+Z)_Feed';
    scan.glm.pooling    = 1;

    %% GLM REGRESSORS
    data  = load_data_ext( 'scanner');
    block = load_block_ext('scanner');
    % temporary indexes
    ii_back  = logical(data.resp_direction_back_any);
    ii_null  = (~data.resp_bool);
    ii_away  = (~ii_back & ~ii_null & data.resp_away_any);
    ii_fill  = ( ii_back |  ii_null |  ii_away);
    ii_forw  = (~ii_back & ~ii_null & ~ii_away);
    ii_easy  = ii_forw & (data.vbxi_subline_start == data.vbxi_subline_goal);
    ii_hard  = ii_forw & (data.vbxi_subline_start ~= data.vbxi_subline_goal);
    % regressors
    scan.glm.regressor = struct(                        ...
        'subject', {                                    ... subject
                     block.expt_subject ,               ...
                     data.expt_subject(ii_fill),        ...
                     data.expt_subject(ii_easy),        ...
                     data.expt_subject(ii_hard),        ...
                     block.expt_subject },              ...
        'session', {                                    ... session
                     block.expt_session ,               ...
                     data.expt_session(ii_fill),        ...
                     data.expt_session(ii_easy),        ...
                     data.expt_session(ii_hard),        ...
                     block.expt_session },              ...
        'onset',   {                                    ... onset
                     block.vbxi_onset_cue ,             ...
                     data.vbxi_onset(ii_fill),          ...
                     data.vbxi_onset(ii_easy),          ...
                     data.vbxi_onset(ii_hard),          ...
                     block.vbxi_onset_reward },         ...
        'discard', {                                    ... discard
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     [],                                ...
                     isnan(block.vbxi_onset_reward) },  ... %(participant 1 didn't get a feedback in the last block)
        'name',    {                                    ... name
                     'Cue' ,                            ...
                     'Fill' ,                           ...
                     'Easy' ,                           ...
                     'Hard' ,                           ...
                     'Feed' },                          ...
        'subname', {                                    ... subname
                     {},                                ...
                     {} ,                               ...
                     {} ,                               ...
                     {'Hard(X)','Hard(S)','Hard(XS)','Hard(Z)'} , ...
                     {} }, ...
        'level',   {                                    ... level
                     {                                  ...     cues
                     }, {                               ...     fill
                     }, {                               ...     easy
                     }, {                               ...     hard
                        ztransf(data.vbxi_exchange_in(ii_hard)), ...
                        ztransf(data.resp_direction_switch(ii_hard)), ...
                        ztransf(data.vbxi_exchange_in(ii_hard)) .* ztransf(data.resp_direction_switch(ii_hard)), ...
                        ztransf(1 ./ data.optm_dist_station_goal(ii_hard)), ...
                     }, {                               ...     feed
                     } },                               ...
        'duration',{                                    ... duration
                     0,                                 ...     cues
                     0,                                 ...     fill
                     0,                                 ...     easy
                     0,                                 ...     hard
                     0,                                 ...     feed
                     });
                                     
     %% SANITY CHECK
     scan = scan_parameters(scan);
     
    %% RUN
    scan3_glm_run(scan);
end
